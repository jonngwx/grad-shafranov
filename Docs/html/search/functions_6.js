var searchData=
[
  ['gaussseidel',['GaussSeidel',['../class_gauss_seidel.html#a99115adeeceef0cfaa0616354c71f59f',1,'GaussSeidel']]],
  ['generate',['Generate',['../classtesting_1_1internal_1_1_random.html#a9315b7fb621cbcfdf92ed4b5e584c0db',1,'testing::internal::Random']]],
  ['generateuniquefilename',['GenerateUniqueFileName',['../classtesting_1_1internal_1_1_file_path.html#a2280a77adb394cf80bb5f73fc292e8c8',1,'testing::internal::FilePath']]],
  ['get',['get',['../classtesting_1_1internal_1_1linked__ptr.html#a6ea8584d9bcad13c3266834f5ce5e771',1,'testing::internal::linked_ptr::get()'],['../classtesting_1_1internal_1_1scoped__ptr.html#adc8f8fcb63ce69f80f011456e6d2f08d',1,'testing::internal::scoped_ptr::get()'],['../classtesting_1_1internal_1_1_thread_local.html#a9cfa47ae6e9e8c19fe8782e2e9c1b13e',1,'testing::internal::ThreadLocal::get()']]],
  ['getabsolutepathtooutputfile',['GetAbsolutePathToOutputFile',['../classtesting_1_1internal_1_1_unit_test_options.html#a993fb30ad66104158c8c0ac508daca3f',1,'testing::internal::UnitTestOptions']]],
  ['getansicolorcode',['GetAnsiColorCode',['../namespacetesting_1_1internal.html#a0aefb9deb60e90f19c236559837303d8',1,'testing::internal']]],
  ['getboolassertionfailuremessage',['GetBoolAssertionFailureMessage',['../namespacetesting_1_1internal.html#a5fd6e5dc9eb20ab3c3a80e24d89dfac6',1,'testing::internal']]],
  ['getcapturedstderr',['GetCapturedStderr',['../namespacetesting_1_1internal.html#a374156401da17704099d0c33fa53adfb',1,'testing::internal']]],
  ['getcapturedstdout',['GetCapturedStdout',['../namespacetesting_1_1internal.html#aed657219a9856a8d249a3230de0c54ce',1,'testing::internal']]],
  ['getcurrentdir',['GetCurrentDir',['../classtesting_1_1internal_1_1_file_path.html#aaff39ccd7bfb7a1c09c0220a64326387',1,'testing::internal::FilePath']]],
  ['getcurrentexecutablename',['GetCurrentExecutableName',['../namespacetesting_1_1internal.html#a7a2bbf069f75bc99873976ad6fc356ad',1,'testing::internal']]],
  ['getcurrentosstacktraceexcepttop',['GetCurrentOsStackTraceExceptTop',['../namespacetesting_1_1internal.html#aeb475922b8cd1e6c60ac052bbc396e62',1,'testing::internal']]],
  ['getelementor',['GetElementOr',['../namespacetesting_1_1internal.html#a71fdd20a0686bea3dc0cdcd95e0bca1c',1,'testing::internal']]],
  ['getenv',['GetEnv',['../namespacetesting_1_1internal_1_1posix.html#a1d5e3da5a27eed25986859fa83cafe95',1,'testing::internal::posix']]],
  ['getglobaltestpartresultreporter',['GetGlobalTestPartResultReporter',['../classtesting_1_1internal_1_1_unit_test_impl.html#a1cd291fd6751654924362164735d4b49',1,'testing::internal::UnitTestImpl']]],
  ['getinstance',['GetInstance',['../classtesting_1_1_unit_test.html#a24192400b70b3b946746954e9574fb8e',1,'testing::UnitTest']]],
  ['getmutabletestcase',['GetMutableTestCase',['../classtesting_1_1internal_1_1_unit_test_impl.html#a2ca71a08060037357fc7e1a406b89add',1,'testing::internal::UnitTestImpl']]],
  ['getnextrandomseed',['GetNextRandomSeed',['../namespacetesting_1_1internal.html#a6e07a655cb987d131cd8fbeba9a7f1eb',1,'testing::internal']]],
  ['getoutputformat',['GetOutputFormat',['../classtesting_1_1internal_1_1_unit_test_options.html#ae7413a21296d885c6924650b51ac4f6d',1,'testing::internal::UnitTestOptions']]],
  ['getrandomseedfromflag',['GetRandomSeedFromFlag',['../namespacetesting_1_1internal.html#ae74fedbdaebaac8d1202192266243b9e',1,'testing::internal']]],
  ['getstream',['GetStream',['../classtesting_1_1internal_1_1_g_test_log.html#aebb92e67d98eca69f0347d5121dab27a',1,'testing::internal::GTestLog']]],
  ['getstring',['GetString',['../classtesting_1_1_message.html#abe8c1b7584aa670dd0e2413e8317a937',1,'testing::Message']]],
  ['gettestcase',['GetTestCase',['../classtesting_1_1_unit_test.html#a3f324a8067d56044b56cec58d1edf7ac',1,'testing::UnitTest::GetTestCase()'],['../classtesting_1_1internal_1_1_unit_test_impl.html#a3104213167a38ffa80168a888e769c20',1,'testing::internal::UnitTestImpl::GetTestCase(int i) const '],['../classtesting_1_1internal_1_1_unit_test_impl.html#ac5684d824a59e963cb3274c79d0b6df3',1,'testing::internal::UnitTestImpl::GetTestCase(const char *test_case_name, const char *type_param, Test::SetUpTestCaseFunc set_up_tc, Test::TearDownTestCaseFunc tear_down_tc)']]],
  ['gettestinfo',['GetTestInfo',['../classtesting_1_1_test_case.html#a9a7d5757d4b352cda2dddd0fda714a88',1,'testing::TestCase']]],
  ['gettestpartresult',['GetTestPartResult',['../classtesting_1_1_test_part_result_array.html#a799a09c9ad8c1c8875400af78efe4b17',1,'testing::TestPartResultArray::GetTestPartResult()'],['../classtesting_1_1_test_result.html#a08b680f63d91391db4161f909da2bbcc',1,'testing::TestResult::GetTestPartResult()']]],
  ['gettestpartresultreporterforcurrentthread',['GetTestPartResultReporterForCurrentThread',['../classtesting_1_1internal_1_1_unit_test_impl.html#a5fb3dd8bc839e10b62eba07790704132',1,'testing::internal::UnitTestImpl']]],
  ['gettestproperty',['GetTestProperty',['../classtesting_1_1_test_result.html#a2cb23a457a444ba85684dd655895f08e',1,'testing::TestResult']]],
  ['gettesttypeid',['GetTestTypeId',['../namespacetesting_1_1internal.html#ad0d66d56ead224263cd100c1d6bfc562',1,'testing::internal']]],
  ['getthreadcount',['GetThreadCount',['../namespacetesting_1_1internal.html#a3b9b3649cd04558bf46c75de52a7ef34',1,'testing::internal']]],
  ['gettimeinmillis',['GetTimeInMillis',['../namespacetesting_1_1internal.html#ae66b46943a429e6efb1db456d4cae90c',1,'testing::internal']]],
  ['gettypeid',['GetTypeId',['../namespacetesting_1_1internal.html#a6b108e56fdc68ea937ffb3759fb55ab0',1,'testing::internal']]],
  ['gettypename',['GetTypeName',['../namespacetesting_1_1internal.html#a635606b4731f843c86ec8ca51cab83a1',1,'testing::internal']]],
  ['getunittestimpl',['GetUnitTestImpl',['../namespacetesting_1_1internal.html#a9bd0caf5d16512de38b39599c13ee634',1,'testing::internal']]],
  ['grad_5foutput_5fhdf',['Grad_Output_Hdf',['../class_grad___output___hdf.html#a7a168b8b7e1270d2b0690fb44175bbdf',1,'Grad_Output_Hdf']]],
  ['grad_5foutput_5ftxt',['Grad_Output_Txt',['../class_grad___output___txt.html#a34a91282efd8f64c52ee7b61654d9718',1,'Grad_Output_Txt']]],
  ['grid',['Grid',['../class_grid.html#ab78d3cef00ffeaf870bcbb19921aec0e',1,'Grid']]],
  ['gtest_5f10_5ftuple_5f',['GTEST_10_TUPLE_',['../namespacestd_1_1tr1.html#aa636d3269bf1f368a7bc09ff158bc482',1,'std::tr1']]],
  ['gtest_5f1_5ftuple_5f',['GTEST_1_TUPLE_',['../namespacestd_1_1tr1.html#a9971f52f994f142fe36c786b991cfd3e',1,'std::tr1::GTEST_1_TUPLE_(T)'],['../namespacestd_1_1tr1.html#a8b196fb65b7521a688f59c51418ab191',1,'std::tr1::GTEST_1_TUPLE_(T) make_tuple(const T0 &amp;f0)']]],
  ['gtest_5f2_5ftuple_5f',['GTEST_2_TUPLE_',['../namespacestd_1_1tr1.html#a05651180c3a4c06fe0f3b09144b82b93',1,'std::tr1::GTEST_2_TUPLE_(T)'],['../namespacestd_1_1tr1.html#a90d9f0e7f95fa1c2093372d72493c3c1',1,'std::tr1::GTEST_2_TUPLE_(T) make_tuple(const T0 &amp;f0']]],
  ['gtest_5f3_5ftuple_5f',['GTEST_3_TUPLE_',['../namespacestd_1_1tr1.html#a368170c49cc7d7f130c0564bbad01205',1,'std::tr1::GTEST_3_TUPLE_(T)'],['../namespacestd_1_1tr1.html#a4493d91e61718415264f7e72fea42930',1,'std::tr1::GTEST_3_TUPLE_(T) make_tuple(const T0 &amp;f0']]],
  ['gtest_5f4_5ftuple_5f',['GTEST_4_TUPLE_',['../namespacestd_1_1tr1.html#a661b17d2b7137863f06a016762f5c888',1,'std::tr1::GTEST_4_TUPLE_(T)'],['../namespacestd_1_1tr1.html#a4e57e6fab4219802275bd31821b31b58',1,'std::tr1::GTEST_4_TUPLE_(T) make_tuple(const T0 &amp;f0']]],
  ['gtest_5f5_5ftuple_5f',['GTEST_5_TUPLE_',['../namespacestd_1_1tr1.html#a51b070e2eb5e6bb83a290f35c19667dd',1,'std::tr1::GTEST_5_TUPLE_(T)'],['../namespacestd_1_1tr1.html#a6f8af2da768a7ea1e48b2700d1288166',1,'std::tr1::GTEST_5_TUPLE_(T) make_tuple(const T0 &amp;f0']]],
  ['gtest_5f6_5ftuple_5f',['GTEST_6_TUPLE_',['../namespacestd_1_1tr1.html#a485b05fdbbcfcf7ad5e4234e17702268',1,'std::tr1::GTEST_6_TUPLE_(T)'],['../namespacestd_1_1tr1.html#a31cde155977a4544af2b44b51ffe69ac',1,'std::tr1::GTEST_6_TUPLE_(T) make_tuple(const T0 &amp;f0']]],
  ['gtest_5f7_5ftuple_5f',['GTEST_7_TUPLE_',['../namespacestd_1_1tr1.html#ab451b390a95ee0555d7a43b67ea348aa',1,'std::tr1::GTEST_7_TUPLE_(T)'],['../namespacestd_1_1tr1.html#a61277f5af24b20fce87a9fd94307ab34',1,'std::tr1::GTEST_7_TUPLE_(T) make_tuple(const T0 &amp;f0']]],
  ['gtest_5f8_5ftuple_5f',['GTEST_8_TUPLE_',['../namespacestd_1_1tr1.html#ab2b1c72e9db7436909d9ac011645f29d',1,'std::tr1::GTEST_8_TUPLE_(T)'],['../namespacestd_1_1tr1.html#a29c8efcb79a4749e079b704c418266e6',1,'std::tr1::GTEST_8_TUPLE_(T) make_tuple(const T0 &amp;f0']]],
  ['gtest_5f9_5ftuple_5f',['GTEST_9_TUPLE_',['../namespacestd_1_1tr1.html#ab4f2c7d5458171bec6c4330fc5c7aba6',1,'std::tr1::GTEST_9_TUPLE_(T)'],['../namespacestd_1_1tr1.html#a6afad1f98814ccc897d0b02bc6fc4e7d',1,'std::tr1::GTEST_9_TUPLE_(T) make_tuple(const T0 &amp;f0']]],
  ['gtest_5fadd_5fref_5f',['GTEST_ADD_REF_',['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_010_01_4.html#a74beca3869fddfe42ee608b7f4cacb96',1,'std::tr1::gtest_internal::Get&lt; 0 &gt;::GTEST_ADD_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_011_01_4.html#a52b2f5d2bc283d76a3e8dede84dba154',1,'std::tr1::gtest_internal::Get&lt; 1 &gt;::GTEST_ADD_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_012_01_4.html#a8dfe7b5c1c915f10181e3fb5952ba6d8',1,'std::tr1::gtest_internal::Get&lt; 2 &gt;::GTEST_ADD_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_013_01_4.html#aa2ebd71eca812f06bad0773a7e2f6788',1,'std::tr1::gtest_internal::Get&lt; 3 &gt;::GTEST_ADD_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_014_01_4.html#a5c7a91c681118bb7253e305f8ff42be4',1,'std::tr1::gtest_internal::Get&lt; 4 &gt;::GTEST_ADD_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_015_01_4.html#a0a337088bab3f824f67d1607229fdcc2',1,'std::tr1::gtest_internal::Get&lt; 5 &gt;::GTEST_ADD_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_016_01_4.html#a28034152d066c8644fa55e9fc0e3a12d',1,'std::tr1::gtest_internal::Get&lt; 6 &gt;::GTEST_ADD_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_017_01_4.html#ae1245f00b2ad610a130681b5bc81051c',1,'std::tr1::gtest_internal::Get&lt; 7 &gt;::GTEST_ADD_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_018_01_4.html#adf667300b7efed278f4ee3bf4d2edb85',1,'std::tr1::gtest_internal::Get&lt; 8 &gt;::GTEST_ADD_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_019_01_4.html#add31197dfdb381d265e221ed62129f45',1,'std::tr1::gtest_internal::Get&lt; 9 &gt;::GTEST_ADD_REF_()'],['../namespacestd_1_1tr1.html#ad0769041710d18b917067576f84b0303',1,'std::tr1::GTEST_ADD_REF_()']]],
  ['gtest_5fby_5fref_5f',['GTEST_BY_REF_',['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_010_01_4.html#a195b3853de45077f9a324c455f22d7e2',1,'std::tr1::gtest_internal::Get&lt; 0 &gt;::GTEST_BY_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_011_01_4.html#a481a2bf839c758408d46a1d0d41ff8f4',1,'std::tr1::gtest_internal::Get&lt; 1 &gt;::GTEST_BY_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_012_01_4.html#a76127c9c03c1f0caa61fb87d4d756b5b',1,'std::tr1::gtest_internal::Get&lt; 2 &gt;::GTEST_BY_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_013_01_4.html#ab8c5283e6776308abc41aaad518a23c7',1,'std::tr1::gtest_internal::Get&lt; 3 &gt;::GTEST_BY_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_014_01_4.html#a04794c398bbe81e4de0915b79da2166a',1,'std::tr1::gtest_internal::Get&lt; 4 &gt;::GTEST_BY_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_015_01_4.html#ae10fe16450db82d69b9a4d0b149ca75d',1,'std::tr1::gtest_internal::Get&lt; 5 &gt;::GTEST_BY_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_016_01_4.html#a6e396b998757e0ab9b75db0c68a7c360',1,'std::tr1::gtest_internal::Get&lt; 6 &gt;::GTEST_BY_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_017_01_4.html#afb7bd56e0697304325cd157d11df4a7b',1,'std::tr1::gtest_internal::Get&lt; 7 &gt;::GTEST_BY_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_018_01_4.html#ab9645513ad2f983157f4062c89e910e7',1,'std::tr1::gtest_internal::Get&lt; 8 &gt;::GTEST_BY_REF_()'],['../classstd_1_1tr1_1_1gtest__internal_1_1_get_3_019_01_4.html#a5205e8da729e2bee446f5be0c65390af',1,'std::tr1::gtest_internal::Get&lt; 9 &gt;::GTEST_BY_REF_()'],['../namespacestd_1_1tr1.html#a7c131d0c2462612a78012be16114f61d',1,'std::tr1::GTEST_BY_REF_()']]],
  ['gtest_5fdeclare_5fbool_5f',['GTEST_DECLARE_bool_',['../namespacetesting.html#a4c08ba9fcb0581c61e25968e520efa48',1,'testing::GTEST_DECLARE_bool_(also_run_disabled_tests)'],['../namespacetesting.html#a5868c3980b2f69f511fc8c3de7cdfc17',1,'testing::GTEST_DECLARE_bool_(break_on_failure)'],['../namespacetesting.html#ab6f1777f7b740f31e41f7da017447b58',1,'testing::GTEST_DECLARE_bool_(catch_exceptions)'],['../namespacetesting.html#af2cd3595c571ca408afc337bc4bb2619',1,'testing::GTEST_DECLARE_bool_(list_tests)'],['../namespacetesting.html#aeccefd463a0942da24750e1bbee76041',1,'testing::GTEST_DECLARE_bool_(print_time)'],['../namespacetesting.html#af37b9206b938bb8b7d398a1379eb7482',1,'testing::GTEST_DECLARE_bool_(show_internal_stack_frames)'],['../namespacetesting.html#a6d87f7374e105483905a305328856f4b',1,'testing::GTEST_DECLARE_bool_(shuffle)'],['../namespacetesting.html#ac69f2aeeb84dc5f49bd3d040a6f32d17',1,'testing::GTEST_DECLARE_bool_(throw_on_failure)'],['../namespacetesting.html#a534f0743e7c42c55d27dcd0dd3d38f18',1,'testing::GTEST_DECLARE_bool_(death_test_use_fork)']]],
  ['gtest_5fdeclare_5fint32_5f',['GTEST_DECLARE_int32_',['../namespacetesting.html#ae754999b59509808254d39e3a3cf38e0',1,'testing::GTEST_DECLARE_int32_(random_seed)'],['../namespacetesting.html#a315ef0647e4f2795bf1705de8e9c9659',1,'testing::GTEST_DECLARE_int32_(repeat)'],['../namespacetesting.html#adba6f8afa0f8695956d0134f1629a10b',1,'testing::GTEST_DECLARE_int32_(stack_trace_depth)']]],
  ['gtest_5fdeclare_5fstatic_5fmutex_5f',['GTEST_DECLARE_STATIC_MUTEX_',['../namespacetesting_1_1internal.html#ad7c5625384cf5f6b714188f274537ef6',1,'testing::internal']]],
  ['gtest_5fdeclare_5fstring_5f',['GTEST_DECLARE_string_',['../namespacetesting.html#a37b7e87f0a5f502c6918f37d1768c1f3',1,'testing::GTEST_DECLARE_string_(death_test_style)'],['../namespacetesting.html#a0f658c915a1e60996a2ab00a06612723',1,'testing::GTEST_DECLARE_string_(color)'],['../namespacetesting.html#a20d69860ce843142c7f740262e6b0c9a',1,'testing::GTEST_DECLARE_string_(filter)'],['../namespacetesting.html#a3fe54dd551f1c36cfdd1b36cd6881a44',1,'testing::GTEST_DECLARE_string_(output)'],['../namespacetesting.html#ad4d1ea63037fc21018dbe997cb0041d1',1,'testing::GTEST_DECLARE_string_(stream_result_to)'],['../namespacetesting_1_1internal.html#ac20f635c3285878fc1195ce687f23950',1,'testing::internal::GTEST_DECLARE_string_()']]],
  ['gtest_5fdefine_5fbool_5f',['GTEST_DEFINE_bool_',['../namespacetesting.html#afee59458b05682d57d3a389e0903bc01',1,'testing::GTEST_DEFINE_bool_(death_test_use_fork, internal::BoolFromGTestEnv(&quot;death_test_use_fork&quot;, false),&quot;Instructs to use fork()/_exit() instead of clone() in death tests. &quot;&quot;Ignored and always uses fork() on POSIX systems where clone() is not &quot;&quot;implemented. Useful when running under valgrind or similar tools if &quot;&quot;those do not support clone(). Valgrind 3.3.1 will just fail if &quot;&quot;it sees an unsupported combination of clone() flags. &quot;&quot;It is not recommended to use this flag w/o valgrind though it will &quot;&quot;work in 99% of the cases. Once valgrind is fixed, this flag will &quot;&quot;most likely be removed.&quot;)'],['../namespacetesting.html#aaead7d1aa21cf4a222e10e4c91c21ee5',1,'testing::GTEST_DEFINE_bool_(also_run_disabled_tests, internal::BoolFromGTestEnv(&quot;also_run_disabled_tests&quot;, false),&quot;Run disabled tests too, in addition to the tests normally being run.&quot;)'],['../namespacetesting.html#a5c9316c2f726f836c50fcfc1065d718c',1,'testing::GTEST_DEFINE_bool_(break_on_failure, internal::BoolFromGTestEnv(&quot;break_on_failure&quot;, false),&quot;True iff a failed assertion should be a debugger break-point.&quot;)'],['../namespacetesting.html#a16f63f28356f1843888013487da9f89d',1,'testing::GTEST_DEFINE_bool_(catch_exceptions, internal::BoolFromGTestEnv(&quot;catch_exceptions&quot;, true),&quot;True iff &quot;GTEST_NAME_&quot; should catch exceptions and treat them as test failures.&quot;)'],['../namespacetesting.html#a9ef54a5b29ac4b2a1e086e77224a0b19',1,'testing::GTEST_DEFINE_bool_(list_tests, false,&quot;List all tests without running them.&quot;)'],['../namespacetesting.html#a51fb68302e8e3fce5bd61340843a6e6a',1,'testing::GTEST_DEFINE_bool_(print_time, internal::BoolFromGTestEnv(&quot;print_time&quot;, true),&quot;True iff &quot;GTEST_NAME_&quot; should display elapsed time in text output.&quot;)'],['../namespacetesting.html#a5982e64522de6804cbf5d1732fd62751',1,'testing::GTEST_DEFINE_bool_(show_internal_stack_frames, false,&quot;True iff &quot;GTEST_NAME_&quot; should include internal stack frames when &quot;&quot;printing test failure stack traces.&quot;)'],['../namespacetesting.html#acc11444cd1c18500658a35e02d4f2cf9',1,'testing::GTEST_DEFINE_bool_(shuffle, internal::BoolFromGTestEnv(&quot;shuffle&quot;, false),&quot;True iff &quot;GTEST_NAME_&quot; should randomize tests&apos; order on every run.&quot;)'],['../namespacetesting.html#a05ff4385edff6d44f6823f5eade7abe2',1,'testing::GTEST_DEFINE_bool_(throw_on_failure, internal::BoolFromGTestEnv(&quot;throw_on_failure&quot;, false),&quot;When this flag is specified, a failed assertion will throw an exception &quot;&quot;if exceptions are enabled or exit the program with a non-zero code &quot;&quot;otherwise.&quot;)']]],
  ['gtest_5fdefine_5fint32_5f',['GTEST_DEFINE_int32_',['../namespacetesting.html#a25e098abb7ce93d06582d48434be90c7',1,'testing::GTEST_DEFINE_int32_(random_seed, internal::Int32FromGTestEnv(&quot;random_seed&quot;, 0),&quot;Random number seed to use when shuffling test orders.  Must be in range &quot;&quot;[1, 99999], or 0 to use a seed based on the current time.&quot;)'],['../namespacetesting.html#a8b2c1dad0764e0984486bae49a988f0e',1,'testing::GTEST_DEFINE_int32_(repeat, internal::Int32FromGTestEnv(&quot;repeat&quot;, 1),&quot;How many times to repeat each test.  Specify a negative number &quot;&quot;for repeating forever.  Useful for shaking out flaky tests.&quot;)'],['../namespacetesting.html#aaedd7015b957f3c37662c289b645e7d9',1,'testing::GTEST_DEFINE_int32_(stack_trace_depth, internal::Int32FromGTestEnv(&quot;stack_trace_depth&quot;, kMaxStackTraceDepth),&quot;The maximum number of stack frames to print when an &quot;&quot;assertion fails.  The valid range is 0 through 100, inclusive.&quot;)']]],
  ['gtest_5fdefine_5fstatic_5fmutex_5f',['GTEST_DEFINE_STATIC_MUTEX_',['../namespacetesting_1_1internal.html#aff419d76acc3727be48d195f927189c9',1,'testing::internal']]],
  ['gtest_5fdefine_5fstring_5f',['GTEST_DEFINE_string_',['../namespacetesting.html#ad93c9ec89517d047ed323b79d96df251',1,'testing::GTEST_DEFINE_string_()'],['../namespacetesting_1_1internal.html#a1b4d550272b7346726a5b4976d5c7aca',1,'testing::internal::GTEST_DEFINE_string_()'],['../namespacetesting.html#a00b4a4eabdef5927208aeabd81220069',1,'testing::GTEST_DEFINE_string_(color, internal::StringFromGTestEnv(&quot;color&quot;,&quot;auto&quot;),&quot;Whether to use colors in the output.  Valid values: yes, no, &quot;&quot;and auto.  &apos;auto&apos; means to use colors if the output is &quot;&quot;being sent to a terminal and the TERM environment variable &quot;&quot;is set to a terminal type that supports colors.&quot;)'],['../namespacetesting.html#aa7039e72c7b7041f11d2619c93a934d6',1,'testing::GTEST_DEFINE_string_(filter, internal::StringFromGTestEnv(&quot;filter&quot;, GetDefaultFilter()),&quot;A colon-separated list of glob (not regex) patterns &quot;&quot;for filtering the tests to run, optionally followed by a &quot;&quot;&apos;-&apos; and a : separated list of negative patterns (tests to &quot;&quot;exclude).  A test is run if it matches one of the positive &quot;&quot;patterns and does not match any of the negative patterns.&quot;)'],['../namespacetesting.html#a9f8de43b364103bafa1e8ca4bebe9d58',1,'testing::GTEST_DEFINE_string_(output, internal::StringFromGTestEnv(&quot;output&quot;,&quot;&quot;),&quot;A format (currently must be \&quot;xml\&quot;), optionally followed &quot;&quot;by a colon and an output file name or directory. A directory &quot;&quot;is indicated by a trailing pathname separator. &quot;&quot;Examples: \&quot;xml:filename.xml\&quot;, \&quot;xml::directoryname/\&quot;. &quot;&quot;If a directory is specified, output files will be created &quot;&quot;within that directory, with file-names based on the test &quot;&quot;executable&apos;s name and, if necessary, made unique by adding &quot;&quot;digits.&quot;)'],['../namespacetesting.html#a0422a6f971513cf559a8575a0533b235',1,'testing::GTEST_DEFINE_string_(stream_result_to, internal::StringFromGTestEnv(&quot;stream_result_to&quot;,&quot;&quot;),&quot;This flag specifies the host name and the port number on which to stream &quot;&quot;test results. Example: \&quot;localhost:555\&quot;. The flag is effective only on &quot;&quot;Linux.&quot;)']]],
  ['gtest_5fimpl_5fcmp_5fhelper_5f',['GTEST_IMPL_CMP_HELPER_',['../namespacetesting_1_1internal.html#aa3a0659f0e495c276d69bc9beddb268a',1,'testing::internal::GTEST_IMPL_CMP_HELPER_(NE,!=)'],['../namespacetesting_1_1internal.html#ade60646b18728043fff84d7b4125de2c',1,'testing::internal::GTEST_IMPL_CMP_HELPER_(LE,&lt;=)'],['../namespacetesting_1_1internal.html#aabcbff15eac496f8487699d19f42c274',1,'testing::internal::GTEST_IMPL_CMP_HELPER_(LT,&lt;)'],['../namespacetesting_1_1internal.html#af969886067930ce70f6405cd5aa8b06b',1,'testing::internal::GTEST_IMPL_CMP_HELPER_(GE, &gt;=)'],['../namespacetesting_1_1internal.html#a7fdb4fc164db83c51dfad17640bfeae9',1,'testing::internal::GTEST_IMPL_CMP_HELPER_(GT, &gt;)']]],
  ['gtest_5fimpl_5fformat_5fc_5fstring_5fas_5fpointer_5f',['GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_',['../namespacetesting_1_1internal.html#a3682f962ae0ec1c0eca6444ca0a09e91',1,'testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_(char)'],['../namespacetesting_1_1internal.html#a85e08f00d443221e529a0a85a90fbaeb',1,'testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_(wchar_t)']]],
  ['gtest_5fimpl_5fformat_5fc_5fstring_5fas_5fstring_5f',['GTEST_IMPL_FORMAT_C_STRING_AS_STRING_',['../namespacetesting_1_1internal.html#a9dceb71a64d780beb2db1ed5bf24ad3f',1,'testing::internal']]],
  ['gtest_5ftrace_5fstack',['gtest_trace_stack',['../classtesting_1_1internal_1_1_unit_test_impl.html#af8c7c0a0c954e36d83e6e4690d3fb938',1,'testing::internal::UnitTestImpl::gtest_trace_stack()'],['../classtesting_1_1internal_1_1_unit_test_impl.html#a1fa664f26839f3192f63afb502dee09d',1,'testing::internal::UnitTestImpl::gtest_trace_stack() const ']]],
  ['gtestflagsaver',['GTestFlagSaver',['../classtesting_1_1internal_1_1_g_test_flag_saver.html#ad94262f7765927bbe9a08e25f9c67530',1,'testing::internal::GTestFlagSaver']]],
  ['gtestlog',['GTestLog',['../classtesting_1_1internal_1_1_g_test_log.html#a364691bf972983a59cfa2891062a64af',1,'testing::internal::GTestLog']]],
  ['gtestmutexlock',['GTestMutexLock',['../classtesting_1_1internal_1_1_g_test_mutex_lock.html#a77e3cba326d5356b4a1dea3790559c26',1,'testing::internal::GTestMutexLock']]]
];
